{"version":3,"sources":["../src/index.js"],"names":["Thermometer","options","_generateOptions","theme","size","height","heightPercent","percent","heightBgColor","reverse","reverseGradient","valstr","_createIntervals","stepIntervals","_createIntervalsUI","intervals","props","value","max","steps","format","step","val","toFixed","interval","label","push","map","i","bottom","Component"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './Thermometer.css'\r\n\r\nclass Thermometer extends Component {\r\n  render() {\r\n    this.options = this._generateOptions()\r\n    const theme = `thermometer--theme-${this.options.theme()}`\r\n    const size = `thermometer--${this.options.size()}`\r\n    const height = { height: `${this.options.height}px` }\r\n    const heightPercent = { height: `${this.options.percent()}%` }\r\n    const heightBgColor = { height: `calc(${this.options.height}px - 57px)` }\r\n    const reverse = this.options.reverseGradient ? 'Reverse' : ''\n    const valstr = this.options.valstr()\r\n    this._createIntervals()\r\n    const stepIntervals = this._createIntervalsUI(this.options.intervals)\r\n\r\n    return (\r\n      <div style={height} className={`thermometer ${size} ${theme}`}>\r\n        <div className=\"thermometer__draw-a\"></div>\r\n        <div className={`thermometer__draw-b${reverse}`}></div>\r\n        <div className=\"thermometer__meter\">\r\n          <ul className=\"thermometer__statistics\">{stepIntervals}</ul>\r\n          <div style={heightPercent} className=\"thermometer__mercury\">\r\n            <div className=\"thermometer__percent-current\">{valstr}</div>\r\n            <div className=\"thermometer__mask\">\r\n              <div className={`thermometer__bg-color${reverse}`} style={heightBgColor}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _generateOptions() {\r\n    return {\r\n      theme: () => this.props.theme === 'light' || this.props.theme === 'dark' ? this.props.theme : 'light',\r\n      value: this.props.value || 0, //default 0\r\n      max: this.props.max || 100, //default 100\r\n      steps: this.props.steps,\r\n      format: this.props.format || '',\r\n      size: () => this.props.size === 'small' || this.props.size === 'normal' || this.props.size === 'large' ? this.props.size : 'normal',\r\n      height: this.props.height || 200, //default 200\r\n      valstr: () => this.options.value + this.options.format,\r\n      percent: () => this.options.value / this.options.max * 100,\r\n      reverseGradient: this.props.reverseGradient === 'true' ? true : false, // default false\n      intervals: []\r\n    }\r\n  }\r\n\r\n  _createIntervals() {\r\n    if (this.options.steps) {\r\n      for (let step = 0; step <= this.options.steps; step++) {\r\n        let val = ((this.options.max / this.options.steps) * step).toFixed(2)\r\n        let percent = (val / this.options.max) * 100\r\n        let interval = { percent: percent, label: val + this.options.format }\r\n        this.options.intervals.push(interval)\r\n      }\r\n    }\r\n  }\r\n\r\n  _createIntervalsUI(intervals) {\r\n    return intervals.map((step, i) => {\r\n      return (\r\n        <li key={i} style={{ bottom: `calc(${step.percent}% - 1px)` }}>\r\n          {step.label}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default Thermometer\n"]}